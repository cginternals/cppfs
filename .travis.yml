language: cpp

env:
  global:
    - CMAKE_OPTIONS="-DOPTION_BUILD_EXAMPLES=On"

matrix:
  include:

    - os: osx
      osx_image: xcode9.1
      env: CMAKE_CONFIGURATION=release BUILD_DIR=build

    - os: osx
      osx_image: xcode9.1
      env: CMAKE_CONFIGURATION=debug BUILD_DIR=build-debug

    - os: linux
      compiler: clang
      env: CMAKE_CONFIGURATION=release BUILD_DIR=build
      addons:
        apt:
          packages:
          - libssh2-1-dev
          - lib64z1-dev
          - libssl-dev
          - cppcheck
          - clang-tidy-3.8

    - os: linux
      compiler: clang
      env: CMAKE_CONFIGURATION=debug BUILD_DIR=build-debug
      addons:
        apt:
          packages:
          - libssh2-1-dev
          - lib64z1-dev
          - libssl-dev
          - cppcheck
          - clang-tidy-3.8

    - os: linux
      compiler: gcc
      env:
        - CMAKE_CONFIGURATION=release BUILD_DIR=build
        - MATRIX_EVAL="CC=gcc-5 && CXX=g++-5"
      addons:
        apt:
          sources:
          - ubuntu-toolchain-r-test
          packages:
          - cmake
          - g++-5
          - libssh2-1-dev
          - lib64z1-dev
          - libssl-dev
          - cppcheck
          - clang-tidy-3.8

    - os: linux
      compiler: gcc
      env:
        - CMAKE_CONFIGURATION=debug BUILD_DIR=build-debug
        - MATRIX_EVAL="CC=gcc-5 && CXX=g++-5"
      addons:
        apt:
          sources:
          - ubuntu-toolchain-r-test
          packages:
          - cmake
          - g++-5
          - libssh2-1-dev
          - lib64z1-dev
          - libssl-dev
          - cppcheck
          - clang-tidy-3.8

before_install:
  - if [ $TRAVIS_OS_NAME == linux ]; then export CMAKE_OPTIONS="$CMAKE_OPTIONS"; fi
  - if [ $TRAVIS_OS_NAME == linux ]; then echo "CMAKE_OPTIONS = $CMAKE_OPTIONS"; fi

before_script:
  - eval "${MATRIX_EVAL}"
  - chmod +x ./configure
  - ./configure
  - ./configure $CMAKE_CONFIGURATION

script:
  - cmake --build $BUILD_DIR
  - cmake --build $BUILD_DIR --target test
